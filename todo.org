#+TITLE: Jeffs Projects
#+SEQ_TODO: NEXT(n) TODO(t) WAITING(w) SOMEDAY(s) PROJ(p) | DONE(d) CANCELLED(c) DEFERRED(D)
#+TAGS: AGENDAS(a) MARCY(m) ERRANDS(e) BIKES(b) READ_REVIEW(r)

* GTD Weekly Review
  SCHEDULED: <2017-05-12 Fri ++1w>
  - State "DONE"       from ""           [2017-05-06 Sat 09:47]
  :PROPERTIES:
  :LAST_REPEAT: [2017-05-06 Sat 09:47]
  :END:

* Florida autofiler

** TODO create DR15-SW
   SCHEDULED: <2017-06-24 Sat>
   [2017-06-20 Tue]
   [[file:/c/davo/notes/florida-auto-filer-dev-notes.md]]


* PROJ Improve my standard emacs config

- [ ] nuke site-lisp in John Wiegleys config to improve search results.

** Learn about helm-projectile

- [ ] find a tutorial and watch or read it.


** Searching

*** CANCELLED set up swiper mode to replace i-search

NOPE, prefer helm-swoop to swipe.

- does Sacha, John W or danielmai use swiper?
- A: it looks like John W uses swiper, and swiper-helm
  - Steve Purcell used to use swiper; now commented out.
  - No hits for Sacha nor daniel mai
- swiper-helm was last updated 2 years ago; it looks abandoned to me
- the swiper author is also the ivy guy, so he uses ivy instead? of helm?

- what search completion does sacha use?  A: looks like helm-swoop


*** DONE consider using helm-swoop instead of swiper [5/5]

- [X] check out [[https://github.com/ShingoFukuyama/helm-swoop][helm swoop source]]
- [X] who uses it?  Sacha, John Weigley, Daniel Mai
- [X] does Sacha use it?  A: yes, see below
- [X] does Daniel Mai use it? yes, see below
- [X] what is my current configuration?

**** DONE How Sacha uses helm-swoop:

#+BEGIN_SRC emacs-lisp :tangle yes
(use-package helm-swoop
 :bind
 (("C-S-s" . helm-swoop)
  ("M-i" . helm-swoop)
  ("M-s s" . helm-swoop)
  ("M-s M-s" . helm-swoop)
  ("M-I" . helm-swoop-back-to-last-point)
  ("C-c M-i" . helm-multi-swoop)
  ("C-x M-i" . helm-multi-swoop-all)
  )
 :config
 (progn
   (define-key isearch-mode-map (kbd "M-i") 'helm-swoop-from-isearch)
   (define-key helm-swoop-map (kbd "M-i") 'helm-multi-swoop-all-from-helm-swoop))
)
#+END_SRC


**** DONE How Daniel Mai uses helm

it turns out that I derived my helm config from Daniel already.
so just make a better key binding for helm-swoop: choose: M-i

#+begin_src emacs-lisp
(use-package helm
  :ensure t
  :diminish helm-mode
  :init (progn
          (require 'helm-config)
          (use-package helm-projectile
            :ensure t
            :commands helm-projectile
            :bind ("C-c p h" . helm-projectile))
          (use-package helm-ag :defer 10  :ensure t)
          (setq helm-locate-command "mdfind -interpret -name %s %s"
                helm-ff-newfile-prompt-p nil
                helm-M-x-fuzzy-match t)
          (helm-mode)
          (use-package helm-swoop
            :ensure t
            :bind ("H-w" . helm-swoop)))
  :bind (("C-c h" . helm-command-prefix)
         ("C-x b" . helm-mini)
         ("C-`" . helm-resume)
         ("M-x" . helm-M-x)
         ("C-x C-f" . helm-find-files)))
#+end_src


*** Consider ace-isearch

   ace-isearch        20161107.1730 available  melpa      A seamless bridge between isearch, ace-jump-mode, avy and helm-swoop



*** consider adding other helm features

- consider adding other helm features:
- helm-bookmarks looks particularly useful; Daniel Gopar binds it to ~C-x r b~
- helm-show-kill-ring: ~M-y~




* PROJ Learn /enough/ Emacs Lisp

[[https://emacs.stackexchange.com/questions/16805/good-elisp-tutorial-for-thorough-lisp-understanding][Good elisp tutorial for thorough Lisp understanding?]]

* PROJ Configure datawhere Digital Ocean server with ansible

** Design

- all user level operations done as user jeff
  - compiles, git repo work etc.


** DONE set up a python 2 virtual env

- ansible has only experimental support for py3
- stored relative to datawhere dir: /c/datawhere/tmp/venvs/dw-ansible

** DONE create an API key

** DONE Get ansible running in a virtual env

reall that you must install ansible *in* the virtual env

pip install ansible

you know it worked when the ansible is in the path:

#+BEGIN_SRC bash
$ which ansible
/c/datawhere/tmp/venvs/dw-ansible/bin/ansible
#+END_SRC


*** pycrypto build issue

[[http://stackoverflow.com/questions/15375171/pycrypto-install-fatal-error-gmp-h-file-not-found/35753259][Pycrypto install fatal error: gmp.h file not found]]

allows one to use pip to install pycrypto, not easy_install.

#+BEGIN_SRC bash
(dw-ansible) jeff at vega in /c/datawhere/digital-ocean-ansible
$ env "CFLAGS=-I/usr/local/include -L/usr/local/lib" pip install pycrypto
Collecting pycrypto
  Using cached pycrypto-2.6.1.tar.gz
Building wheels for collected packages: pycrypto
  Running setup.py bdist_wheel for pycrypto ... done
  Stored in directory: /Users/jeff/Library/Caches/pip/wheels/80/1f/94/f76e9746864f198eb0e304aeec319159fa41b082f61281ffce
Successfully built pycrypto
Installing collected packages: pycrypto
Successfully installed pycrypto-2.6.1
#+END_SRC

** DONE resolve error: key already exists.
** define roles

- jeff-user
  - provision jeff as a user
  - emacs25
  - jeffs emacs config
- lua-prod
- lua-dev
  - depends on lua-prod
  - all the packages needed for Lua development

** DONE initialize the droplet

to find the available regions digital ocean offers, I wrote a bit of python:

#+BEGIN_SRC python
$ python
Python 2.7.13 (default, Dec 19 2016, 09:49:24)
[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import dopy
>>> help(dopy)

>>> from dopy.manager import DoManager
>>> do = DoManager(None, 'cecdfe2c1c3e18df4760f6f76f2e510de192ff8d8cd50ba3a5e881f966961de6', api_version=2)
>>> from pprint import pprint
>>> pprint(do.all_regions())
[
  ...
 {u'available': True,
  u'features': [u'private_networking',
                u'backups',
                u'ipv6',
                u'metadata',
                u'install_agent',
                u'storage'],
  u'name': u'San Francisco 2',
  u'sizes': [u'512mb',
             u'1gb',
             u'2gb',
             u'4gb',
             u'8gb',
             u'16gb',
             u'32gb',
             u'48gb',
             u'64gb'],
  u'slug': u'sfo2'},
>>>
#+END_SRC

I found the images like this:

./list-images.py | grep ubuntu

./list-images.py | grep ubuntu
  u'slug': u'ubuntu-14-04-x64',
  u'slug': u'ubuntu-14-04-x32',
  u'slug': u'ubuntu-16-10-x32',
  u'slug': u'ubuntu-16-10-x64',
  u'slug': u'ubuntu-17-04-x32',
  u'slug': u'ubuntu-17-04-x64',
  u'slug': u'ubuntu-16-04-x64',
  u'slug': u'ubuntu-16-04-x32',
  u'slug': u'ubuntu-12-04-x32',
  u'slug': u'ubuntu-12-04-x64',

pick ubuntu-16-04-x64

** DONE configure DNS manually (not ansbile)

** encrypt the secrets

- do api key


*** move api key into ansible vault?

** configure new user: jeff, with access via ssh only

** configure ubuntu
*** sudoers
*** ensure root login is only allowed via ssh, not password
*** configure a new account: jeff
** configure Jeffs dot files
** configure emacs 25
** configure git
** configure lua
** configure refreshing packages

* Evaluate Mike Kennedy's Python courses

[[https://training.talkpython.fm/courses/all][course list]]

* Nephrology appt

I need to call and schedule this appt
- phone: 650 853 6795

10 AM June 15th: Dr Siva
Lee building: second floor

* CIMI Presentation at SFBAOG

Sat Jun 17 09:00:38 PDT 2017

Al Z presenting

I asked Al about his 'fixed cost trading platforms'.
He cited 3:

'wrap accounts': [[http://www.investopedia.com/terms/w/wrapaccount.asp][investopedia wrap account]]

Motif: trade up to 30 stocks per day for $10

Folio Investing is where Al does a lot of his trading

- fixed cost $300 / year
- window trading: only at 11 & 2 eastern

Portfolio 123 is the $600/year cost portfolio screening tool that could be used to replace the AAII screen

- [ ] read Als article: [[http://www.aaii.com/computerized-investing/article/backtesting-a-stock-screen-to-improve-your-results][Backtesting the AAII Estimate Revisions Stock Screen]]

Al thinks the top 30 revision screen is a 'pretty good' screen

* Portfolio 123 investigation

- I can get an extended free trial period by signing up as a referral from an existing member
  - here is [[http://www.backtestinvesting.com/2016/10/30/start-here/][one such referral]]

* Recreate hound '27 years' strategy

** Qs for Terry

- were there limits on liquidity in the 26 year rule set?
  - likley: no, but limiting the universe to the Value Line 1700 effectively does so

- I need the buy & sell rules as well


** WAITING Get help from Terry with the rules

* Organize my notes, tasks

<2017-06-19 Mon 07:21>

I want to split out the information I manage daily and for projects.
It seems like I have the *inbox* kind of flow:

- todos
- short term reminders

and much longer term multi-step efforts

What is the timestamped org mode files?

- here is now John Wiegley [[http://newartisans.com/2007/08/using-org-mode-as-a-day-planner/][uses org mode as a day planner]]

the central point here of John W's approach are:

- there is a *single* file
- the flow relies on:
  - quickly capturing tasks
  - organizing ones day in the daily view: scheduling tasks is what gets them done
  - links from tasks to other working files are essential
  - the state transition (with timestamps and notes) are what JW uses for motivation
  - archive tasks off to get them out of the daily view
  - reschedule any tasks carried over from the past

certainly using JW's approach will improve my data flow quite a bit.

What are the preconditions to using it effectively?

** pick my initial categories
** figure out how to schedule a task
** get org-capture working
** learn some key bindings for state transitions
