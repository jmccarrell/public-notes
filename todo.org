#+TITLE: Jeffs Projects
#+SEQ_TODO: NEXT(n) TODO(t) WAITING(w) SOMEDAY(s) PROJ(p) | DONE(d) CANCELLED(c)
#+TAGS: AGENDAS(a) MARCY(m) ERRANDS(e) BIKES(b) READ_REVIEW(r)

* GTD Weekly Review
  SCHEDULED: <2017-05-12 Fri ++1w>
  - State "DONE"       from ""           [2017-05-06 Sat 09:47]
  :PROPERTIES:
  :LAST_REPEAT: [2017-05-06 Sat 09:47]
  :END:

* PROJ Set up GTD in org mode

The idea is to keep 3 files initially:

  - this file, todo.org: all personal projects at the top level
  - yadle.org: tasks related to Datawhere
  - davo.org: ditto for Davo


** Finish reading GTD book

*** DONE read GTD chapter 9: Engaging: Making the Best Action Choices
    SCHEDULED: <2017-05-06 Sat>

*** read GTD chapter 10: Getting Projects under Control
    SCHEDULED: <2017-05-06 Sat>

*** read GTD chapter 11: the Power of the Capturing Habit
    SCHEDULED: <2017-05-07 Sun>

*** read GTD chapter 12: the Power of the Next Action Decision
    SCHEDULED: <2017-05-07 Sun>

*** read GTD chapter 13: the Power of Outcome Focusing
    SCHEDULED: <2017-05-08 Mon>

*** read GTD chapter 14: GTD and Cognitive Science
    SCHEDULED: <2017-05-08 Mon>

*** read GTD chapter 15:  the Path of GTD Mastery
    SCHEDULED: <2017-05-09 Tue>

** Come up with an initial set of contexts [1/1]

- [X] first review contexts in the GTD book

*** possible initial contexts

- Agendas
  - Marcy
  - PeterK
  - DaveL
- Davo and Yadle
  - no, defined by the file the tasks are in
- Errands
- Calls?
  - not sure I have enough for this to make sense
- Read/Review


*** the GTD list of common contexts

- Calls
- At computer
- Errands
- At office (miscellaneous)
- At Home
- Anywhere
- Agendas (for people and meetings)
- Read/Review


** explore the notion of separating todos from notes

my today-todo is a mixed journal of todo items and notes on how I did those things.

if I pursue the idea of separating out long-lived notes from todo lists, how does that affect my workflow?

** figure out how to format preformatted text in org mode


** Investigate agenda views [0/1]

the default agenda views present everything;

- [ ] I need to understand how agendas can be filtered and viewed
- [ ] re-watch Rainer's agenda video

** NEXT GTD org-mode FAQ

*** what is the key binding to mark something TODO, NEXT, etc?

A: Shift-<LEFT, RIGHT> to move to the next state definedin SEQ_TODO
A: ~C-c C-t~ to set the state to one of the choices, like DONE.

*** How do I schedule something?

put the cursor on the headline; then 

*** how do I get an agenda of the current things I am working on?

A: ~C-a a~ then ~a~ for basic agenda.

Restrict the agenda view to the current file or subtree

- restrict to file: ~C-u C-c C-x <~
- to subtree:  ~C-c C-x <~
- restore unrestrict ~C-c C-x >~

*** how are GTD contexts typically implemented?

The usual way is to implement TAGS at the top of the file.

then insert one more many tags with ~C-c C-q~


*** how do I archive things?

A: ~C-c C-x C-a~, org-archive-subtree-default to archive everthing in the subtree
A: there is also ~C-c C-x C-s~ org-archive-subtree which archives the subtree starting at point

- and its prefix modifier: ~C-u C-c C-x C-s~ which will search for any open TODO items.  if none are found, it will offer to archive that subtree.

** Watch again the videos on agenda basics

- [ ] make a basic keyboard cheet sheet; or augment the one I already have.

*** Watch 103: schedule, deadlines, agendas
*** Watch 104: Repeating Tasks
*** Watch 105: Checklists

** SOMEDAY Empty my Inbox

  - email inbox
  - walk back through prior today-todo file extracting projects
  - empty Things categories: look at 'Next'
  - review /j/proj
  - review /j/ebooks
  - ~/Dropbox/project-list.md or some such

** Capture my list of projects into org mode


** TODO Follow Sacha's org-mode Map

[[http://sachachua.com/blog/2014/01/tips-learning-org-mode-emacs/][Some tips for learning Org Mode for Emacs]]

*** Todos including shortcuts

**** Todo configuration
define your own workflow

*** Scheduling

*** Date Offset

*** Agendas
weekly, daily

**** Agenda Deadlines

**** Repeating Agendas

*** Logs
lognotedone, logdone

*** Tags

*** Search
esp with tags; also, jumping

*** Custom Agenda

*** Stuck Projects
defining your own

*** Capture
templates, links

*** Refiling
organizing

**** Sorting
priority, ABC

*** Archiving

*** Multiple Files

**** Includes

*** Views

** Build up my set of categories

- [ ] figure out what categories:
  - John W uses
  - Sacha uses
  - Charles uses
  - Steve Purcell uses
  - decide my own categories

*** Categories John W uses

I can't find any match in johns config for =org-todo-keywords=


*** Categories Sacha uses

...can be found [here](http://pages.sachachua.com/.emacs.d/Sacha.html#org5e4acb0)

She uses keywords:

#+begin_src emacs-lisp
(setq org-todo-keywords
 '((sequence
    "TODO(t)"  ; next action
    "TOBLOG(b)"  ; next action
    "STARTED(s)"
    "WAITING(w@/!)"
    "SOMEDAY(.)" "|" "DONE(x!)" "CANCELLED(c@)")
   (sequence "LEARN" "TRY" "TEACH" "|" "COMPLETE(x)")
   (sequence "TOSKETCH" "SKETCHED" "|" "POSTED")
   (sequence "TOBUY" "TOSHRINK" "TOCUT"  "TOSEW" "|" "DONE(x)")
   (sequence "TODELEGATE(-)" "DELEGATED(d)" "|" "COMPLETE(x)")))
#+end_src

with faces:

#+begin_src emacs-lisp
(setq org-todo-keyword-faces
      '(("TODO" . (:foreground "green" :weight bold))
        ("DONE" . (:foreground "cyan" :weight bold))
        ("WAITING" . (:foreground "red" :weight bold))
        ("SOMEDAY" . (:foreground "gray" :weight bold))))
#+end_src


*** My Categories

- to read/review


** Working with Code

*** workflow

One can open a given block of code in a new buffer with =C-c '=; then one can eval-buffer


** TODO org mode capture

- [ ] How do I use capture?  C-c c to capture a new item.  Doesn't seem to work for me.  C-c c is unbound.

*** TODO read Capture - Refile - Archive: section 9

- [ ] - so I need to specify where my org stuff is going to go.  propose: ~/j/notes/org~
- and I need a binding for 'org-capture

- [ ] what does John W do?  A: I can't tell
- sacha?  Sacha doesn't use org-capture at all.


** NEXT get describe-personal-keybindings to work

after projectile loads, this command throws:

funcall-interactively: Wrong type argument: symbolp, (quote projectile-command-map)


* PROJ Improve my standard emacs config

- [ ] nuke site-lisp in John Wiegleys config to improve search results.

** Learn about helm-projectile

- [ ] find a tutorial and watch or read it.


** Searching

*** CANCELLED set up swiper mode to replace i-search

NOPE, prefer helm-swoop to swipe.

- does Sacha, John W or danielmai use swiper?
- A: it looks like John W uses swiper, and swiper-helm
  - Steve Purcell used to use swiper; now commented out.
  - No hits for Sacha nor daniel mai
- swiper-helm was last updated 2 years ago; it looks abandoned to me
- the swiper author is also the ivy guy, so he uses ivy instead? of helm?

- what search completion does sacha use?  A: looks like helm-swoop


*** DONE consider using helm-swoop instead of swiper [5/5]

- [X] check out [[https://github.com/ShingoFukuyama/helm-swoop][helm swoop source]]
- [X] who uses it?  Sacha, John Weigley, Daniel Mai
- [X] does Sacha use it?  A: yes, see below
- [X] does Daniel Mai use it? yes, see below
- [X] what is my current configuration?

**** DONE How Sacha uses helm-swoop:

#+BEGIN_SRC emacs-lisp :tangle yes
(use-package helm-swoop
 :bind
 (("C-S-s" . helm-swoop)
  ("M-i" . helm-swoop)
  ("M-s s" . helm-swoop)
  ("M-s M-s" . helm-swoop)
  ("M-I" . helm-swoop-back-to-last-point)
  ("C-c M-i" . helm-multi-swoop)
  ("C-x M-i" . helm-multi-swoop-all)
  )
 :config
 (progn
   (define-key isearch-mode-map (kbd "M-i") 'helm-swoop-from-isearch)
   (define-key helm-swoop-map (kbd "M-i") 'helm-multi-swoop-all-from-helm-swoop))
)
#+END_SRC


**** DONE How Daniel Mai uses helm

it turns out that I derived my helm config from Daniel already.
so just make a better key binding for helm-swoop: choose: M-i

#+begin_src emacs-lisp
(use-package helm
  :ensure t
  :diminish helm-mode
  :init (progn
          (require 'helm-config)
          (use-package helm-projectile
            :ensure t
            :commands helm-projectile
            :bind ("C-c p h" . helm-projectile))
          (use-package helm-ag :defer 10  :ensure t)
          (setq helm-locate-command "mdfind -interpret -name %s %s"
                helm-ff-newfile-prompt-p nil
                helm-M-x-fuzzy-match t)
          (helm-mode)
          (use-package helm-swoop
            :ensure t
            :bind ("H-w" . helm-swoop)))
  :bind (("C-c h" . helm-command-prefix)
         ("C-x b" . helm-mini)
         ("C-`" . helm-resume)
         ("M-x" . helm-M-x)
         ("C-x C-f" . helm-find-files)))
#+end_src


*** Consider ace-isearch

   ace-isearch        20161107.1730 available  melpa      A seamless bridge between isearch, ace-jump-mode, avy and helm-swoop



*** consider adding other helm features

- consider adding other helm features:
- helm-bookmarks looks particularly useful; Daniel Gopar binds it to ~C-x r b~
- helm-show-kill-ring: ~M-y~




* PROJ Learn /enough/ Emacs Lisp

[[https://emacs.stackexchange.com/questions/16805/good-elisp-tutorial-for-thorough-lisp-understanding][Good elisp tutorial for thorough Lisp understanding?]]

* PROJ Repair door ding in Lexus

** DONE find the name of the body shop

** NEXT Work with Marcy to get the NX to the body shop        :AGENDAS:MARCY:

* PROJ Configure datawhere Digital Ocean server with ansible

** Design

- all user level operations done as user jeff
  - compiles, git repo work etc.


** DONE set up a python 2 virtual env

- ansible has only experimental support for py3
- stored relative to datawhere dir: /c/datawhere/tmp/venvs/dw-ansible

** DONE create an API key

** DONE Get ansible running in a virtual env

reall that you must install ansible *in* the virtual env

pip install ansible

you know it worked when the ansible is in the path:

#+BEGIN_SRC bash
$ which ansible
/c/datawhere/tmp/venvs/dw-ansible/bin/ansible
#+END_SRC


*** pycrypto build issue

[[http://stackoverflow.com/questions/15375171/pycrypto-install-fatal-error-gmp-h-file-not-found/35753259][Pycrypto install fatal error: gmp.h file not found]]

allows one to use pip to install pycrypto, not easy_install.

#+BEGIN_SRC bash
(dw-ansible) jeff at vega in /c/datawhere/digital-ocean-ansible
$ env "CFLAGS=-I/usr/local/include -L/usr/local/lib" pip install pycrypto
Collecting pycrypto
  Using cached pycrypto-2.6.1.tar.gz
Building wheels for collected packages: pycrypto
  Running setup.py bdist_wheel for pycrypto ... done
  Stored in directory: /Users/jeff/Library/Caches/pip/wheels/80/1f/94/f76e9746864f198eb0e304aeec319159fa41b082f61281ffce
Successfully built pycrypto
Installing collected packages: pycrypto
Successfully installed pycrypto-2.6.1
#+END_SRC

** DONE resolve error: key already exists.
** define roles

- jeff-user
  - provision jeff as a user
  - emacs25
  - jeffs emacs config
- lua-prod
- lua-dev
  - depends on lua-prod
  - all the packages needed for Lua development

** DONE initialize the droplet

to find the available regions digital ocean offers, I wrote a bit of python:

#+BEGIN_SRC python
$ python
Python 2.7.13 (default, Dec 19 2016, 09:49:24)
[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import dopy
>>> help(dopy)

>>> from dopy.manager import DoManager
>>> do = DoManager(None, 'cecdfe2c1c3e18df4760f6f76f2e510de192ff8d8cd50ba3a5e881f966961de6', api_version=2)
>>> from pprint import pprint
>>> pprint(do.all_regions())
[
  ...
 {u'available': True,
  u'features': [u'private_networking',
                u'backups',
                u'ipv6',
                u'metadata',
                u'install_agent',
                u'storage'],
  u'name': u'San Francisco 2',
  u'sizes': [u'512mb',
             u'1gb',
             u'2gb',
             u'4gb',
             u'8gb',
             u'16gb',
             u'32gb',
             u'48gb',
             u'64gb'],
  u'slug': u'sfo2'},
>>>
#+END_SRC

I found the images like this:

./list-images.py | grep ubuntu

./list-images.py | grep ubuntu
  u'slug': u'ubuntu-14-04-x64',
  u'slug': u'ubuntu-14-04-x32',
  u'slug': u'ubuntu-16-10-x32',
  u'slug': u'ubuntu-16-10-x64',
  u'slug': u'ubuntu-17-04-x32',
  u'slug': u'ubuntu-17-04-x64',
  u'slug': u'ubuntu-16-04-x64',
  u'slug': u'ubuntu-16-04-x32',
  u'slug': u'ubuntu-12-04-x32',
  u'slug': u'ubuntu-12-04-x64',

pick ubuntu-16-04-x64

** DONE configure DNS manually (not ansbile)

** encrypt the secrets

- do api key


*** move api key into ansible vault?

** configure new user: jeff, with access via ssh only

** configure ubuntu
*** sudoers
*** ensure root login is only allowed via ssh, not password
*** configure a new account: jeff
** configure Jeffs dot files
** configure emacs 25
** configure git
** configure lua
** configure refreshing packages

* apply to roche job

https://stackoverflow.com/jobs/129526/python-software-engineer-sequencing-roche?sec=False

* Evaluate Mike Kennedy's Python courses

[[https://training.talkpython.fm/courses/all][course list]]

* Home

** Kitchen / Cooking

*** DONE Unload kraut into jars
    SCHEDULED: <2017-05-06 Sat>

* FordGoBike

- $124 for an annual membership with unlimited 45 min rides.
- starts 6/28, which is a Wednesday.

* Python env

I need to remove python 3.4 from vega now that it is no longer needed.

What is the difference between autoenv and pyenv?

pyenv is specific to python

autoenv sets state per directory, and is deprecated in favor of direnv, according to the author Kenneth Reitz.

so how do I add the homebrew python3 to pyenv?

some quick googling does not show any obvious recipes
and given the name clash between python and python3,
and that pyenv has to work by overriding the literal names
for its 'shims' approach to work,
I think there is not likely to be a good solution here.

So just go back to what I was doing before.

** Todo

- [ ] Nuke pyenv entirely, as I no longer need its functionality.
- [ ] recreate the autofile virtualenv with homebrew py361

use [[https://direnv.net/][direnv]] to set per-directory configuration, like PATH etc in the future.
and its [[https://github.com/direnv/direnv/wiki/Emacs][emacs package]]

* Nephrology appt

I need to call and schedule this appt
- phone: 650 853 6795

10 AM June 15th: Dr Siva
Lee building: second floor
