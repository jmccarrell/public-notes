* generate a sequence in mysql

I actually wanted a series of dates -- days -- to report stats on.

so I can generate a sequence of numbers -- with an arbitrary offset -- using LAST_INSERT_ID with a parameter.
see LAST_INSERT_ID in [[https://dev.mysql.com/doc/refman/5.7/en/information-functions.html][mysql information functions]]

here is an effective -- if mysql function based -- approach to generating a [[https://www.convert-in.com/mysql-sequence.htm][potentially repeatable sequence]]
I have tested this and it works.

a postgres [[http://www.neilconway.org/docs/sequences/][FAQ on sequences]]

#+name: begin-and-end-of-cal-period
#+comment: against local
#+header: :engine mysql
#+header: :cmdline --login-path=local seq_test
#+begin_src sql
select
  TO_DAYS('2010-01-01') as start_dt
 ,TO_DAYS('2030-01-01') as end_dt
from (select 1) s
#+end_src

#+RESULTS:
| start_dt | end_dt |
|----------+--------|
|   734138 | 741443 |

#+name: prepared-digits
#+comment: against local
#+header: :engine mysql
#+header: :cmdline --login-path=local seq_test
#+begin_src sql
prepare digits from
'select 0 as digit
union all select 1
union all select 2
union all select 3
union all select 4
union all select 5
union all select 6
union all select 7
union all select 8
union all select 9';
execute digits;
execute digits;
#+end_src

#+RESULTS:
| digit |
|-------|
|     0 |
|     1 |
|     2 |
|     3 |
|     4 |
|     5 |
|     6 |
|     7 |
|     8 |
|     9 |
| digit |
|     0 |
|     1 |
|     2 |
|     3 |
|     4 |
|     5 |
|     6 |
|     7 |
|     8 |
|     9 |

#+name: sequence-0-to-30
#+comment: against local
#+header: :engine mysql
#+header: :cmdline --login-path=local seq_test
#+begin_src sql
select (weeks_3.digit * 10) + digits.digit as d
  from
 (
  select 0 as digit
  union all select 1
  union all select 2
  union all select 3
  union all select 4
  union all select 5
  union all select 6
  union all select 7
  union all select 8
  union all select 9
 ) digits
 cross join
 (
  select 0 as digit
  union all select 1
  union all select 2
 ) weeks_3  
order by 1 asc
#+end_src

#+RESULTS:
|  d |
|----|
|  0 |
|  1 |
|  2 |
|  3 |
|  4 |
|  5 |
|  6 |
|  7 |
|  8 |
|  9 |
| 10 |
| 11 |
| 12 |
| 13 |
| 14 |
| 15 |
| 16 |
| 17 |
| 18 |
| 19 |
| 20 |
| 21 |
| 22 |
| 23 |
| 24 |
| 25 |
| 26 |
| 27 |
| 28 |
| 29 |


#+name: last-30-days
#+comment: against local
#+header: :engine mysql
#+header: :cmdline --login-path=local seq_test
#+begin_src sql
select DATE_SUB(CURDATE(), INTERVAL offset DAY) as dt
  from
 (
  select (weeks_3.digit * 10) + digits.digit as offset
    from
   (
    select 0 as digit
    union all select 1
    union all select 2
    union all select 3
    union all select 4
    union all select 5
    union all select 6
    # union all select 7
    # union all select 8
    # union all select 9
   ) digits
   cross join
   (
    select 0 as digit
    # union all select 1
    # union all select 2
   ) weeks_3  
  order by 1 asc
 ) seq_0_to_30
#+end_src

#+RESULTS:
|         dt |
|------------|
| 2017-10-26 |
| 2017-10-25 |
| 2017-10-24 |
| 2017-10-23 |
| 2017-10-22 |
| 2017-10-21 |
| 2017-10-20 |


#+name: last-30-days
#+comment: against local
#+header: :engine mysql
#+header: :cmdline --login-path=prod-replica entelo_production
#+begin_src sql
select last_30_dates.dt as dt
 , count(lushas.created_at) as cnt
from
 -- compute the last 30 dates
 (
  select DATE_SUB(CURDATE(), INTERVAL offset DAY) as dt
    from
   (
    select (weeks_3.digit * 10) + digits.digit as offset
      from
     (
      select 0 as digit
      union all select 1
      union all select 2
      union all select 3
      union all select 4
      union all select 5
      union all select 6
      union all select 7
      union all select 8
      union all select 9
     ) digits
     cross join
     (
      select 0 as digit
      union all select 1
      union all select 2
     ) weeks_3  
    order by 1 asc
   ) seq_0_to_30
 ) last_30_dates
left outer join lushas
  on last_30_dates.dt = DATE(lushas.created_at)
group by dt
order by dt
#+end_src

#+RESULTS:
|         dt |  cnt |
|------------+------|
| 2017-09-27 |  513 |
| 2017-09-28 |  504 |
| 2017-09-29 |  437 |
| 2017-09-30 |   37 |
| 2017-10-01 |   35 |
| 2017-10-02 |  348 |
| 2017-10-03 |  375 |
| 2017-10-04 |  322 |
| 2017-10-05 |  332 |
| 2017-10-06 |  309 |
| 2017-10-07 |   91 |
| 2017-10-08 |   40 |
| 2017-10-09 |  279 |
| 2017-10-10 |  470 |
| 2017-10-11 |  370 |
| 2017-10-12 |  475 |
| 2017-10-13 |  319 |
| 2017-10-14 |   46 |
| 2017-10-15 |   36 |
| 2017-10-16 |  429 |
| 2017-10-17 |  430 |
| 2017-10-18 |  532 |
| 2017-10-19 |  407 |
| 2017-10-20 |  327 |
| 2017-10-21 |    4 |
| 2017-10-22 |    0 |
| 2017-10-23 |    0 |
| 2017-10-24 |    0 |
| 2017-10-25 | 1885 |
| 2017-10-26 |  274 |
